/**
 * Copyright 2013 AirGap, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at

 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Application specific configuration data
 */
application {
    /*
     * Application name displayed in the toolbar and the about page
     *
     */
    name = "NodeBuilder"

    /*
     * Footer string, for displaying in the bottom of all pages
     */
    footer_text = "Copyright &copy; 2013 AirGap IT"
    footer_text_color = "gray"
}

/*
 * This is the default node-builder configuration file.  Please update settings with values
 * that are accurate for your environment.  There is a brief explanation of each section with examples.
 * Changes to the config require a server restart to pick them up.
 *
 *
 * Node builder has the ability to interact with open stack.  This section allows you to define the location of
 * the openstack installation with some login and default parameters as well.
 */
openstack {
    /*
     * url for the identity endpoint on openstack
     */
    url  =  "http://hostname:5000/v2.0"

    /*
     * user to login to openstack with
     */
    username = 'user'

    /*
     * password for user authentication in openstack
     */
    password = 'pass'

    /*
     * tenant api key for accessing an openstack project
     */
    tenant.id = 'tenantId'

    /*
     * default key name for using with new openstack instances
     */
    key.id = 'keyId'

    /*
     * default flavor id for starting new openstack instances, will be
     * used if larger than that specified by a node descriptor
     */
    flavor.id = 'flavorId'
}

/*
 * Node builder has the ablility to interact with email systems.  This section allows you to define the location of
 * your smtp and imap email servers.  You can also add default username, from address and imap folder for reading.
 */
email {

    /*
     * Node builder smtp server settings
     *
     */
    smtp{

        /*
         * hostname your smtp server is running on
         */
        hostname = 'hostname'

        /*
         * port the smtp server is listening to
         */
        port = 465

        /*
         * username for authentication if required
         */
        username = 'user@hostname'

        /*
         * password for authentication if required
         */
        password = 'password'

        /*
         * default from address for use in sending emails
         */
        from = 'user@hostname'
    }

    /*
     * Node builder imap server settings
     *
     */
    imap{

        /*
         * hostname your imap server is running on
         */
        hostname = 'hostnae'

        /*
         * port the imap server is listening to
         */
        port = 993

        /*
         * username for accessing an imap folder
         */
        username = 'user@hostname'

        /*
         * password for accessing an imap folder
         */
        password = 'password'

        /*
         * default imap folder to access
         */
        folder = 'INBOX'
    }

}

/*
 * Node builder can interact with multiple source code bases.  It may be helpful to
 * use a specific location for all working copies.
 */
workspace {

    /*
     * path to node builder's workspace
     */
    path = "/tmp/"
}

/*
 * Node builder can interact with jenkins by creating jobs, running them and
 * accessing and data created during the run.
 */
jenkins {

    /*
     * Url to the jenkins server
     */
    url = "http://hostname/"

    /*
     * user to authenticate with jenkins
     */
    user = "user"

    /*
     * user to authenticate with jenkins
     */
    password = "password"
}


/*
 * Node builder can interact with jira by creating issues, interacting with them.
 */
jira {
    /*
     * Url to the jenkins server
     */
    url = "http://hostname"

    /*
     * user to authenticate with jira
     */
    user = "user"

    /*
     * user to authenticate with jira
     */
    password = "password"

    /*
     * default project name to use with issues
     */
    project = "PRJ"

    /*
     * default issue type use when creating new issues
     */
    issueType = 1l
}

/*
 * Node builder can interact with puppet by creating manifests for nodes
 * and uploading them to the puppet master
 */
puppet {
    /*
     * name of the puppet master
     */
    name = 'name'

    /*
     * hostname of the puppet master
     */
    hostname = 'hostname'

    /*
     * username to login to the server with
     */
    username = 'user'

    /*
     * name of the local private key to use for authentication
     */
    privateKey = '~/.ssh/id_rsa'

    /*
     * path to the manifest/nodes directory on the puppet master
     */
    remote.path = '/etc/puppetlabs/puppet/manifests/nodes/'
}

/*
 * Node builder uses mongo as a metrics store
 */
mongo {
    /*
     * hostname of the mongo server
     */
    hostname = "hostname"

    /*
     * port of the mongo server
     */
    port = 27017

    /*
     * username of the mongo server
     */
    username = "mongo"

    /*
     * password of the mongo server
     */
    password = "mongo"

    /*
     * database name for the metrics store
     */
    databaseName = "node-builder"
}